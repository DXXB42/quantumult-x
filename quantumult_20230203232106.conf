;2022-09-26：增加对各个模块的说明(部分内容只适用于 1.1.0 以上版本)
;⚠️注意⚠️: 以下内容中，带“;” “#”的都是注释符号，去掉前面的符号，该行才有效

;general 模块内为一些通用的设置参数项
[general]

;Quantumult X 会对 server_check_url 指定的网址进行相应测试，以确认节点的可用性
;你同样可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数
;如您为节点单独指定了 url，则所有相关延迟测试中，均会采用此 url 地址
server_check_url= http://www.qualcomm.cn/generate_204
;节点延迟测试超时参数，需小于 5000 毫秒才生效
server_check_timeout=2000

;👍👍👍资源解析器，可用于自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址可远程，可 本地/iCloud(Quantumult X/Scripts目录);
;下面是我写的一个解析器，具体内容直接参照链接里的使用说明
resource_parser_url= https://fastly.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js

;👍👍geo_location_checker用于节点页面的节点信息展示，可完整自定义展示内容与方式
; extreme-ip-lookup为Quantumult X 作者提供的示范 api
;geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js
;下面是我所使用的 api 及获取、展示节点信息的 js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js


;👍👍👍运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式。
;running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。

;running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy
; 上述写法，前两个 filter 先后表示 在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 切换为全局代理[all_proxy]
; 如需使用，相应 SSID 换成你自己 Wi-Fi 名即可

;ssid_suspended_list，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个Wi-Fi用“,”连接
;ssid_suspended_list=Asus, Shawn-Wifi

;dns exclusion list中的域名将不使用fake-ip方式. 其它域名则全部采用 fake-ip 及远程解析的模式
;dns_exclusion_list=*.qq.com

;UDP 白名单，留空则默认所有为端口。不在udp白名单列表中的端口，将被丢弃处理（返回 ICMP  “端口不可达” 信息）。
;udp_whitelist=53, 80-427, 444-65535

; UDP Drop名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息
; drop 名单仅处理 whitelist名单中的端口
;udp_drop_list = 1900, 80

# 参数 fallback_udp_policy 仅支持 v1.0.19 以及之后的版本。
# 参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。
fallback_udp_policy=direct

;下列表中的内容将不经过 QuantumultX的处理，设置后建议重启设备
;excluded_routes= 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
;icmp_auto_reply=true

;指定 DoH  请求所使用的 User-Agent
;doh_user_agent=Agent/1.0

;指定服务器测试时所使用的 User-Agent
;server_check_user_agent = Agent/1.0

// 默认当 DNS 层面某domain 被reject时，将返回loopback IP。你可以通过下面的参数
// 修改成为 “no-error-no-answer”，或者 “nxdomain”
;dns_reject_domain_behavior = loopback



[dns]
; 禁用系统 DNS（no-system） 以及 ipv6
;no-system
;no-ipv6
;支持参数 excluded_ssids , included_ssids(1.0.29+) 指定在特定 Wi-Fi下失效/生效

// circumvent-ipv4-answer, circumvent-ipv6-answer 参数
//1、当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
//2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
//3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
;circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
;circumvent-ipv6-answer = ::

//如需使用 DoH3，DNS over HTTP/3，请开启下面👇参数
;prefer-doh3

;指定 dns 服务器，并发响应选取最优结果
server=114.114.114.114
server=202.141.176.93 
server=202.141.178.13
server=117.50.10.10
server=223.5.5.5
server=119.29.29.29:53
server=119.28.28.28

;如指定 doh 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持多个 doh 并发，👇
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持 alias 映射类型
;alias=/example.com/another-example.com


;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2



;指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
;server=/*.taobao.com/223.5.5.5, excluded_ssids=My-Wifi, Your-Wifi
;server=/*.tmall.com/223.5.5.5, included_ssids=His-Wifi
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
//映射域名到其它域名的类型
;alias = /example7.com/another-example.com


[task_local]
;包含3⃣️种类型: cron 定时任务，UI交互脚本，网络切换脚本

; 1⃣️ 任务模块，可用于签到,天气话费查询等
;js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
;从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
;比如上述语句 代表每天 12 点 2 分，自动执行一次;
;tag参数为 task 命名标识;
;img-url参数用于指定 task 的图标(108*108)

2 12 * * * sample.js, tag=本地示范(左滑编辑，右滑执行), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
13 12 * * * https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag=远程示范(点击缓存/更新脚本), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png

# 2⃣️ UI交互查询脚本示范，在首页长按 节点/策略组 唤出
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询，img-url=checkmark.seal.system, enabled=true

# 3⃣️ 网络切换/变化时 触发的脚本类型
;event-network sample-taks.js


#以下为策略组[policy]部分
# static 策略组中，你需要手动选择想要的节点/策略组。
# available 策略组将按顺序选择你列表中第一个可用的节点。
# round-robin 策略组，将按列表的顺序轮流使用其中的节点。
# url-latency-benchmark 延迟策略组，选取延迟最优节点。
# dest-hash 策略组，随机负载均衡，但相同域名走固定节点。
# ssid 策略组，将根据你所设定的网络来自动切换节点/策略组
;img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
;direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)

[policy]
url-latency-benchmark=US 美国, server-tag-regex=美国|🇺🇸|US, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/kjfx/QuantumultX/main/country/US.png
url-latency-benchmark=JP 日本, server-tag-regex=日本|🇯🇵|JP, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/kjfx/QuantumultX/main/country/JP.png
url-latency-benchmark=HK 香港, server-tag-regex=香港|🇭🇰|HK, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/kjfx/QuantumultX/main/country/HK.png
url-latency-benchmark=TW 台湾, server-tag-regex=台湾|🇹🇼|TW, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/kjfx/QuantumultX/main/country/TW.png
static=🍎 苹果服务, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png
static=📽 国内视频, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/DomesticMedia.png
static=📺港台番剧, direct, HK 香港, TW 台湾, img-url=https://raw.githubusercontent.com/DXXB42/quantumult-x/main/icon-samples/Bili.png
static=🎬 YouTube, proxy, direct, US 美国, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/YouTube.png
static=🌏 国外网站, proxy, US 美国, JP 日本, HK 香港, TW 台湾

#server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组
#具体可参见教程部分: https://shrtm.nu/DAFP

#以下是quantumultX的3普通种策略组类型写法，也可以用正则参数 server-tag-regex 或者 resource-tag-regex 来筛选
;static=policy-name-1, Sample-A, Sample-B, Sample-C
;available=policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
;url-latency-benchmark=policy-name-4, Sample-A, Sample-B, Sample-C
;dest-hash=policy-name-5, Sample-A, Sample-B, Sample-C
#下面是ssid策略组示范
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C


# "tag" 跟 "enabled" 为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭.
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

#服务器远程订阅
[server_remote]
https://www.efcloud.cc/api/v1/client/subscribe?token=30a03836adbc837d46db31aed3b3f339, tag=EFCloud, update-interval=172800, opt-parser=false, enabled=true

[filter_remote]
#远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组
;同样的
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🚦去广告, update-interval=86400, opt-parser=true, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag=🚫 运营商劫持, enabled=true

https://github.com/DXXB42/quantumult-x/raw/main/BILIBILI/bilibili.list, tag=📺港台番剧, force-policy=📺港台番剧, update-interval=86400, opt-parser=true, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingCN.list, force-policy=📽 国内视频, tag=📽 国内视频, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/YouTube.list, tag=🎬 YouTube, force-policy=🎬 YouTube, enabled=true

https://github.com/DXXB42/quantumult-x/raw/main/Global.list, tag=🌍 国外网站, force-policy= 🌏 国外网站, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/Apple.list, tag= Apple服务, force-policy=🍎 苹果服务,enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/BlockiOSUpdate.list, tag= 屏蔽更新,enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🐼 国内网站, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳️ 国内IP池, enabled=true

#支持本地/iCloud规则文件，位于Quantumult X/Profiles路径下
;filter.txt, tag=本地分流, enabled=false

#rewrite 复写远程订阅
[rewrite_remote]
#远程复写模块，内包含主机名hostname以及复写rewrite规则
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;


https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=神机复写(⛔️去广告), update-interval=86400, opt-parser=false, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=神机复写(😄️通用), update-interval=86400, opt-parser=false, enabled=true

;Youtube premium 会员请勿开启此条
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=神机复写(🈲YouTube-AD), update-interval=86400, opt-parser=false, enabled=true

https://raw.githubusercontent.com/DXXB42/quantumult-x/main/BILIBILI/bilibili.conf, tag=Bilibili换区脚本, update-interval=86400, opt-parser=false, enabled=false
#支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
;rewrite.txt, tag=本地复写, opt-parser=false, enabled=false

# 本地服务器部分
[server_local]

# 以下示范都是 ip(域名):端口，
# 比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777
# 前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型
# 实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
# 目前支持 shadowsocks/shadowsocksR/Vmess/Trojan/http(s)/Socks5 等类型
# 支持 tls-cert-sha256 以及 tls-pubkey-sha256 参数等自定义TLS验证

#shadowsocks以及shadowsocksR类型, 支持 V2-Plugin
#支持UDP，支持UDP-OVER-TCP（版本1.0.29 665+）
;shadowsocks=ss-a.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=Sample-A
;shadowsocks=ss-b.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=Sample-B
;shadowsocks=ss-c.example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=Sample-C
;shadowsocks=ssr-a.example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=Sample-D
;shadowsocks=ws-a.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-E
;shadowsocks=ws-b.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=Sample-F
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-G
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, udp-over-tcp=true fast-open=false, udp-relay=false, tag=Sample-H

# vmess 类型，ws，wss(ws+tls),over-tls,tcp，支持 UDP
# vmess 类型节点默认开启 aead，关闭请用 aead=false
; ws 类型
;vmess=ws-c.example.com:80, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-c.example.com, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, aead=false, tag=Sample-H
; wss(ws+tls) 类型
;vmess=ws-tls-b.example.com:443, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-tls-b.example.com, obfs=wss, obfs-uri=/ws, tls-verification=true,fast-open=false, udp-relay=false, tag=Sample-I
; http 类型
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
; tcp 类型
;vmess=vmess-a.example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-J
;vmess=vmess-b.example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-K
; over-tls 类型
;vmess=vmess-over-tls.example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=vmess-over-tls.example.com, obfs=over-tls, tls-verification=true, fast-open=false, udp-relay=false, tag=Sample-L

; http(s) 类型
;http=http.example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http
;http=https.example.com:443, username=name, password=pwd, over-tls=true, tls-verification=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls

# socks5 类型节点
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02

; trojan 类型, 支持 over-tls 以及 websockets，支持 UDP
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=true, tag=trojan-tls-01
;trojan=example1.com:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05


#本地分流规则(对于完全相同的某条规则，本地的将优先生效)
[filter_local]
host, www.myip.com, direct
;user-agent, ?abc*, proxy
;host, www.google.com, proxy
;host-keyword, adsite, reject
;host-wildcard, *.goo?le.com, proxy
;host-suffix, googleapis.com, proxy
;host-suffix, googleapis.com, proxy, force-cellular
;host-suffix, googleapis.com, proxy, multi-interface
;host-suffix, googleapis.com, proxy, multi-interface-balance
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0
;ip6-cidr, 2001:4860:4860::8888/32, direct
;ip-cidr, 10.0.0.0/8, direct
;ip-cidr, 127.0.0.0/8, direct
;ip-cidr, 172.16.0.0/12, direct
;ip-cidr, 192.168.0.0/16, direct
;ip-cidr, 224.0.0.0/24, direct
;geoip, cn, direct
;geoip, cn, direct, force-cellular
;ip-asn, 6185, proxy
# You can add below host-keyword rule to skip the DNS query for all the non-matched hosts. Pure IP requests won't be matched by the host related rules.
;host-keyword, ., proxy
final, proxy


#
# The "reject" returns HTTP status code 404 with no content. This type of rewrite has some kind of dynamic delay (0~5 seconds) mechanism of response for repeated requests in a short period of time. The less the repetition, the shorter the delay (0). The more the repetition, the greater the delay (5).
# The "reject-200" returns HTTP status code 200 with no content.
# The "reject-img" returns HTTP status code 200 with content of 1px gif.
# The "reject-dict" returns HTTP status code 200 with content of empty json object.
# The "reject-array" returns HTTP status code 200 with content of empty json array.
# The "request-header" works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The "echo-response" just reply back the body of the content type response for matched URL, the body file should be saved at "On My iPhone - Quantumult X - Data".
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the "rewrite" is body related, so you should not handle them by yourself. The max supported original response body size is 4 MB(iOS 13+) for script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix "$".
# Supports: $request.sessionIndex, $request.scheme, $request.method, $request.url, $request.path, $request.headers,$response.sessionIndex, $response.statusCode, $response.headers, $response.body
# The $request.sessionIndex is equal to $response.sessionIndex when the response is related to the request. The sessionIndex has nothing to do with the index of TCP records in the orange "Activity" panel.
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file.
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body, script-echo-response and script-analyze-echo-response should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X
# The difference between script-analyze-echo-response and script-echo-response is that the former will wait for the request body.
#
# The HTTP(HTTPS) request will be matched if the URL and the headers are both matched for the url-and-header rewrite (The URL will be evaluated first, and if it is not matched then the headers will not be evaluated at all). The string of the headers to compare contains the method, path and key-value headers.
#
[rewrite_local]

#以下为证书&主机名部分
[mitm]
passphrase = 9D3816EC
p12 = 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

;以下模块去掉;才生效
;请自行在 APP 的UI中 生成证书 并安装&信任（💡请按确保照文字提示操作💡）
;skip_validating_cert = false
;force_sni_domain_name = false

//当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
;skip_src_ip = 192.168.4.50, 92.168.4.51

// 当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
;skip_dst_ip = 123.44.55.4

;hostname 为主机名，用,分隔多个
;hostname = *.example.com, *.sample.com

//以下为证书参数，可去UI界面自行生成并安装证书，会在此生成对应信息
;passphrase = 
;p12 = 
